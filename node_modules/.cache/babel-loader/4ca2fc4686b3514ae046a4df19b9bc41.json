{"ast":null,"code":"var _jsxFileName = \"/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getSearch, useNowState, useNowDispatch } from \"./MoviesContext\";\nimport styled from \"styled-components\";\nconst InsertForm = styled.form``;\nconst Input = styled.input`\n  width: 100%;\n\n  padding: 10px;\n\n  font-size: 16px;\n`;\nconst MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst MovieItem = styled.li`\n  width: calc(25% - 20px);\n\n  padding: 10px;\n  margin: 10px;\n\n  text-align: center;\n\n  cursor: pointer;\n\n  img {\n    width: 100%;\n  }\n`;\n\nconst Search = () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const [keywordList, setKeywordList] = useState([]);\n\n  const onChange = ({\n    target\n  }) => setKeyword(target.value);\n\n  const state = useNowState();\n  const dispatch = useNowDispatch(); // console.log(state.search);\n\n  const {\n    data: searchList,\n    loading,\n    error\n  } = state.search;\n\n  function onSubmit(e) {\n    e.preventDefault();\n    fetchData();\n    setKeyword(\"\");\n  }\n\n  async function fetchData() {\n    try {\n      await getSearch(dispatch, keyword);\n      setKeywordList([...keywordList, keyword]);\n    } catch (e) {\n      throw new Error(`error: ${e}`);\n    }\n  } // console.log(keywordList);\n\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  }, \"\\uB85C\\uB529\\uC911..\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"\\uC5D0\\uB7EC.\"); // if (!searchList) return null;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(InsertForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search\",\n    onChange: onChange,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), keywordList ? /*#__PURE__*/React.createElement(SearchHistory, {\n    keywordList: keywordList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }\n  }) : null, searchList ? /*#__PURE__*/React.createElement(SearchList, {\n    searchList: searchList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }) : null);\n};\n\nconst SearchHistoryBlock = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst KeywordItem = styled.li`\n  padding: 10px 15px;\n  margin: 10px 5px;\n\n  background: #ccc;\n  color: #fff;\n  font-weight: bold;\n  border-radius: 20px;\n`;\nconst deleteKeyword = styled.div``;\n\nconst SearchHistory = ({\n  keywordList\n}) => {\n  // console.log(keywordList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchHistoryBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, keywordList.map(key => /*#__PURE__*/React.createElement(KeywordItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, key, /*#__PURE__*/React.createElement(\"deleteKeyword\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"X\")))));\n};\n\nconst SearchList = ({\n  searchList\n}) => {\n  // console.log(searchList);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"search result\"), /*#__PURE__*/React.createElement(MovieList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, searchList.map(({\n    id,\n    title,\n    poster_path\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MovieItem, {\n    id: id,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/now/\" + id,\n    key: `link` + id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"movie_img\",\n    src: `https://image.tmdb.org/t/p/w500/` + poster_path,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Search.js"],"names":["React","useState","useEffect","Link","getSearch","useNowState","useNowDispatch","styled","InsertForm","form","Input","input","MovieList","ul","MovieItem","li","Search","keyword","setKeyword","keywordList","setKeywordList","onChange","target","value","state","dispatch","data","searchList","loading","error","search","onSubmit","e","preventDefault","fetchData","Error","SearchHistoryBlock","KeywordItem","deleteKeyword","div","SearchHistory","map","key","SearchList","id","title","poster_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getSearch, useNowState, useNowDispatch } from \"./MoviesContext\";\nimport styled from \"styled-components\";\n\nconst InsertForm = styled.form``;\nconst Input = styled.input`\n  width: 100%;\n\n  padding: 10px;\n\n  font-size: 16px;\n`;\n\nconst MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst MovieItem = styled.li`\n  width: calc(25% - 20px);\n\n  padding: 10px;\n  margin: 10px;\n\n  text-align: center;\n\n  cursor: pointer;\n\n  img {\n    width: 100%;\n  }\n`;\n\nconst Search = () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const [keywordList, setKeywordList] = useState([]);\n\n  const onChange = ({ target }) => setKeyword(target.value);\n\n  const state = useNowState();\n  const dispatch = useNowDispatch();\n  // console.log(state.search);\n  const { data: searchList, loading, error } = state.search;\n\n  function onSubmit(e) {\n    e.preventDefault();\n    fetchData();\n\n    setKeyword(\"\");\n  }\n\n  async function fetchData() {\n    try {\n      await getSearch(dispatch, keyword);\n      setKeywordList([...keywordList, keyword]);\n    } catch (e) {\n      throw new Error(`error: ${e}`);\n    }\n  }\n  // console.log(keywordList);\n  if (loading) return <div>로딩중..</div>;\n  if (error) return <div>에러.</div>;\n  // if (!searchList) return null;\n\n  return (\n    <div>\n      <h1>Search</h1>\n      <InsertForm onSubmit={onSubmit}>\n        <Input placeholder=\"Search\" onChange={onChange} autoFocus />\n      </InsertForm>\n      {keywordList ? <SearchHistory keywordList={keywordList} /> : null}\n      {searchList ? <SearchList searchList={searchList} /> : null}\n    </div>\n  );\n};\n\nconst SearchHistoryBlock = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst KeywordItem = styled.li`\n  padding: 10px 15px;\n  margin: 10px 5px;\n\n  background: #ccc;\n  color: #fff;\n  font-weight: bold;\n  border-radius: 20px;\n`;\n\nconst deleteKeyword = styled.div``;\n\nconst SearchHistory = ({ keywordList }) => {\n  // console.log(keywordList);\n  return (\n    <div>\n      <SearchHistoryBlock>\n        {keywordList.map((key) => (\n          <KeywordItem>\n            {key}\n            <deleteKeyword>X</deleteKeyword>\n          </KeywordItem>\n        ))}\n      </SearchHistoryBlock>\n    </div>\n  );\n};\n\nconst SearchList = ({ searchList }) => {\n  // console.log(searchList);\n  return (\n    <>\n      <h1>search result</h1>\n      <MovieList>\n        {searchList.map(({ id, title, poster_path }) => (\n          <>\n            <MovieItem id={id} key={id}>\n              <Link to={\"/now/\" + id} key={`link` + id}>\n                <strong>{title}</strong>\n                <img\n                  className=\"movie_img\"\n                  src={`https://image.tmdb.org/t/p/w500/` + poster_path}\n                  alt={title}\n                />\n              </Link>\n            </MovieItem>\n          </>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}