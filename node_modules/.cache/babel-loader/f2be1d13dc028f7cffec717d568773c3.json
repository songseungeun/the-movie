{"ast":null,"code":"var _jsxFileName = \"/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Search.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getSearch, useNowState, useNowDispatch } from \"./MoviesContext\";\nimport styled from \"styled-components\";\nconst InsertForm = styled.form``;\nconst Input = styled.input`\n  width: 100%;\n\n  padding: 10px;\n\n  font-size: 16px;\n`;\nconst MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst MovieItem = styled.li`\n  width: calc(25% - 20px);\n\n  padding: 10px;\n  margin: 10px;\n\n  text-align: center;\n\n  cursor: pointer;\n\n  img {\n    width: 100%;\n  }\n`;\n\nconst Search = () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const initialState = [{\n    id: 1,\n    keyword: \"blue\"\n  }, {\n    id: 2,\n    keyword: \"green\"\n  }];\n  const [keywordList, setKeywordList] = useState(initialState);\n\n  const onChange = ({\n    target\n  }) => setKeyword(target.value);\n\n  const state = useNowState();\n  const dispatch = useNowDispatch(); // console.log(state.search);\n\n  const {\n    data: searchList,\n    loading,\n    error\n  } = state.search; // 키워드 클릭 했을 때 검색\n\n  async function KeySearch(keyword) {\n    await fetchData(keyword); // NowKeyword(keyword);\n  }\n\n  const KeyRemove = id => {\n    setKeywordList(keywordList.filter(key => key.id !== id));\n  };\n\n  async function fetchData(keyword) {\n    // console.log(keyword);\n    try {\n      await getSearch(dispatch, keyword);\n    } catch (e) {\n      throw new Error(`error: ${e}`);\n    }\n  }\n\n  function onSubmit(e) {\n    e.preventDefault(); // console.log(keyword);\n\n    fetchData(keyword);\n    const keywordItem = {\n      id: nextId.current,\n      keyword\n    };\n    setKeywordList([...keywordList, keywordItem]);\n    nextId.current += 1;\n    setKeyword(\"\");\n  }\n\n  const nextId = useRef(3);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, \"\\uB85C\\uB529\\uC911..\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"\\uC5D0\\uB7EC.\"); // if (!searchList) return null;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(InsertForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search\",\n    onChange: onChange,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), keywordList ? /*#__PURE__*/React.createElement(SearchHistory, {\n    keywordList: keywordList,\n    setKeywordList: setKeywordList,\n    KeyRemove: KeyRemove,\n    KeySearch: KeySearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }) : null, searchList ? /*#__PURE__*/React.createElement(SearchList, {\n    searchList: searchList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }) : null);\n};\n\nconst SearchHistoryBlock = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst KeywordItem = styled.li`\n  padding: 10px 15px;\n  margin: 10px 5px;\n\n  background: #ccc;\n  color: #fff;\n  font-weight: bold;\n  border-radius: 20px;\n  cursor: pointer;\n`;\nconst RemoveBtn = styled.div`\n  padding: 5px;\n  display: inline-block;\n  margin-left: 5px;\n  font-weight: normal;\n  color: #000;\n  cursor: pointer;\n`;\n\nconst SearchHistory = ({\n  keywordList,\n  KeyRemove,\n  KeySearch\n}) => {\n  // console.log(keywordList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchHistoryBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, keywordList.map(({\n    id,\n    keyword\n  }) => /*#__PURE__*/React.createElement(KeywordItem, {\n    id: id,\n    key: id,\n    onClick: () => KeySearch(keyword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, keyword, /*#__PURE__*/React.createElement(RemoveBtn, {\n    onClick: () => KeyRemove(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"X\")))));\n};\n\nconst SearchList = ({\n  searchList\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"search result\"), /*#__PURE__*/React.createElement(MovieList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, searchList.map(({\n    id,\n    title,\n    poster_path\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MovieItem, {\n    id: id,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/now/\" + id,\n    key: `search` + id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"movie_img\",\n    src: `https://image.tmdb.org/t/p/w500/` + poster_path,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Search.js"],"names":["React","useState","useRef","Link","getSearch","useNowState","useNowDispatch","styled","InsertForm","form","Input","input","MovieList","ul","MovieItem","li","Search","keyword","setKeyword","initialState","id","keywordList","setKeywordList","onChange","target","value","state","dispatch","data","searchList","loading","error","search","KeySearch","fetchData","KeyRemove","filter","key","e","Error","onSubmit","preventDefault","keywordItem","nextId","current","SearchHistoryBlock","KeywordItem","RemoveBtn","div","SearchHistory","map","SearchList","title","poster_path"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getSearch, useNowState, useNowDispatch } from \"./MoviesContext\";\nimport styled from \"styled-components\";\n\nconst InsertForm = styled.form``;\nconst Input = styled.input`\n  width: 100%;\n\n  padding: 10px;\n\n  font-size: 16px;\n`;\n\nconst MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst MovieItem = styled.li`\n  width: calc(25% - 20px);\n\n  padding: 10px;\n  margin: 10px;\n\n  text-align: center;\n\n  cursor: pointer;\n\n  img {\n    width: 100%;\n  }\n`;\n\nconst Search = () => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const initialState = [\n    { id: 1, keyword: \"blue\" },\n    { id: 2, keyword: \"green\" },\n  ];\n\n  const [keywordList, setKeywordList] = useState(initialState);\n\n  const onChange = ({ target }) => setKeyword(target.value);\n\n  const state = useNowState();\n  const dispatch = useNowDispatch();\n  // console.log(state.search);\n  const { data: searchList, loading, error } = state.search;\n\n  // 키워드 클릭 했을 때 검색\n  async function KeySearch(keyword) {\n    await fetchData(keyword);\n    // NowKeyword(keyword);\n  }\n\n  const KeyRemove = (id) => {\n    setKeywordList(keywordList.filter((key) => key.id !== id));\n  };\n\n  async function fetchData(keyword) {\n    // console.log(keyword);\n    try {\n      await getSearch(dispatch, keyword);\n    } catch (e) {\n      throw new Error(`error: ${e}`);\n    }\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    // console.log(keyword);\n    fetchData(keyword);\n    const keywordItem = {\n      id: nextId.current,\n      keyword,\n    };\n\n    setKeywordList([...keywordList, keywordItem]);\n    nextId.current += 1;\n    setKeyword(\"\");\n  }\n\n  const nextId = useRef(3);\n\n  if (loading) return <div>로딩중..</div>;\n  if (error) return <div>에러.</div>;\n  // if (!searchList) return null;\n\n  return (\n    <div>\n      <h1>Search</h1>\n      <InsertForm onSubmit={onSubmit}>\n        <Input placeholder=\"Search\" onChange={onChange} autoFocus />\n      </InsertForm>\n      {keywordList ? (\n        <SearchHistory\n          keywordList={keywordList}\n          setKeywordList={setKeywordList}\n          KeyRemove={KeyRemove}\n          KeySearch={KeySearch}\n        />\n      ) : null}\n      {searchList ? <SearchList searchList={searchList} /> : null}\n    </div>\n  );\n};\n\nconst SearchHistoryBlock = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst KeywordItem = styled.li`\n  padding: 10px 15px;\n  margin: 10px 5px;\n\n  background: #ccc;\n  color: #fff;\n  font-weight: bold;\n  border-radius: 20px;\n  cursor: pointer;\n`;\n\nconst RemoveBtn = styled.div`\n  padding: 5px;\n  display: inline-block;\n  margin-left: 5px;\n  font-weight: normal;\n  color: #000;\n  cursor: pointer;\n`;\n\nconst SearchHistory = ({ keywordList, KeyRemove, KeySearch }) => {\n  // console.log(keywordList);\n\n  return (\n    <div>\n      <SearchHistoryBlock>\n        {keywordList.map(({ id, keyword }) => (\n          <KeywordItem id={id} key={id} onClick={() => KeySearch(keyword)}>\n            {keyword}\n            <RemoveBtn onClick={() => KeyRemove(id)}>X</RemoveBtn>\n          </KeywordItem>\n        ))}\n      </SearchHistoryBlock>\n    </div>\n  );\n};\n\nconst SearchList = ({ searchList }) => {\n  return (\n    <>\n      <h1>search result</h1>\n      <MovieList>\n        {searchList.map(({ id, title, poster_path }) => (\n          <>\n            <MovieItem id={id} key={id}>\n              <Link to={\"/now/\" + id} key={`search` + id}>\n                <strong>{title}</strong>\n                <img\n                  className=\"movie_img\"\n                  src={`https://image.tmdb.org/t/p/w500/` + poster_path}\n                  alt={title}\n                />\n              </Link>\n            </MovieItem>\n          </>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}