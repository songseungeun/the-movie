{"ast":null,"code":"var _jsxFileName = \"/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Movies.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { movies } from \"./api\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n\n    case \"SUCCESS\":\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n\n    case \"ERROR\":\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst Movies = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null\n  });\n\n  const fetchUsers = async () => {\n    dispatch({\n      type: \"LOADING\"\n    });\n\n    try {\n      const response = await movies.getNowPlaying();\n      dispatch({\n        type: \"SUCCESS\",\n        data: response.data.results\n      });\n    } catch (e) {\n      dispatch({\n        type: \"ERROR\",\n        error: e\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const {\n    loading,\n    data: movieList,\n    error\n  } = state;\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, \"\\uB85C\\uB529\\uC911..\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"\\uC5D0\\uB7EC.\");\n  if (!movieList) return null;\n  console.log(movieList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Now Playing\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"\\uC774 \\uACF3\\uC740 \\uD648\\uC785\\uB2C8\\uB2E4.\"));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Movies.js"],"names":["React","useEffect","useReducer","movies","reducer","state","action","type","loading","data","error","Error","Movies","dispatch","fetchUsers","response","getNowPlaying","results","e","movieList","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,OAAvB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,SAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,OAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF;AACE,YAAM,IAAIC,KAAJ,CAAW,0BAAyBL,MAAM,CAACC,IAAK,EAAhD,CAAN;AArBJ;AAuBD;;AACD,MAAMK,MAAM,GAAG,MAAM;AACnB,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBX,UAAU,CAACE,OAAD,EAAU;AAC5CI,IAAAA,OAAO,EAAE,KADmC;AAE5CC,IAAAA,IAAI,EAAE,IAFsC;AAG5CC,IAAAA,KAAK,EAAE;AAHqC,GAAV,CAApC;;AAMA,QAAMI,UAAU,GAAG,YAAY;AAC7BD,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMZ,MAAM,CAACa,aAAP,EAAvB;AACAH,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,SAAR;AAAmBE,QAAAA,IAAI,EAAEM,QAAQ,CAACN,IAAT,CAAcQ;AAAvC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVL,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,OAAR;AAAiBG,QAAAA,KAAK,EAAEQ;AAAxB,OAAD,CAAR;AACD;AACF,GARD;;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEN,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEU,SAAjB;AAA4BT,IAAAA;AAA5B,MAAsCL,KAA5C;AAEA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACX,MAAI,CAACS,SAAL,EAAgB,OAAO,IAAP;AAEhBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFF,CADF;AAMD,CAnCD;;AAqCA,eAAeP,MAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { movies } from \"./api\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        data: null,\n        error: null,\n      };\n    case \"SUCCESS\":\n      return {\n        loading: true,\n        data: null,\n        error: null,\n      };\n    case \"ERROR\":\n      return {\n        loading: true,\n        data: null,\n        error: null,\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\nconst Movies = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null,\n  });\n\n  const fetchUsers = async () => {\n    dispatch({ type: \"LOADING\" });\n    try {\n      const response = await movies.getNowPlaying();\n      dispatch({ type: \"SUCCESS\", data: response.data.results });\n    } catch (e) {\n      dispatch({ type: \"ERROR\", error: e });\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const { loading, data: movieList, error } = state;\n\n  if (loading) return <div>로딩중..</div>;\n  if (error) return <div>에러.</div>;\n  if (!movieList) return null;\n\n  console.log(movieList);\n\n  return (\n    <div>\n      <h1>Now Playing</h1>\n      <p>이 곳은 홈입니다.</p>\n    </div>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}