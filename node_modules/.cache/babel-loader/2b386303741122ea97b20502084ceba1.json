{"ast":null,"code":"var _jsxFileName = \"/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Movies.js\";\nimport React, { useEffect } from \"react\";\nimport { useNowState, useNowDispatch, getNow } from \"./UsersContext\";\n\nconst Movies = () => {\n  useEffect(() => {}, []); // const [userId, setUserId] = useState(null);\n\n  const state = useNowState();\n  const dispatch = useNowDispatch();\n  console.log(state); // const { loading, data: users, error } = state.users;\n\n  const fetchData = () => {\n    getNow(dispatch);\n  }; // if (loading) return <div>로딩중입니다.</div>;\n  // if (error) return <div>에러가 발생했습니다.</div>;\n  // if (!users) return <button onClick={fetchData}>불러오기</button>;\n  // const [movieList, setMovieList] = useState(null);\n  // const [loading, setLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       setError(null);\n  //       setMovieList(null);\n  //       setLoading(true);\n  //       const response = await movies.getNowPlaying();\n  //       setMovieList(response.data.results);\n  //     } catch (e) {\n  //       setError(e);\n  //     }\n  //     setLoading(false);\n  //   };\n  //   fetchUsers(false);\n  // }, []);\n  // if (loading) return <div>로딩중..</div>;\n  // if (error) return <div>에러.</div>;\n  // if (!movieList) return null;\n  // console.log(movieList);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"\\uD648\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"\\uC774 \\uACF3\\uC740 \\uD648\\uC785\\uB2C8\\uB2E4.\"));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Movies.js"],"names":["React","useEffect","useNowState","useNowDispatch","getNow","Movies","state","dispatch","console","log","fetchData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,MAAtC,QAAoD,gBAApD;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnBJ,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT,CADmB,CAEnB;;AACA,QAAMK,KAAK,GAAGJ,WAAW,EAAzB;AACA,QAAMK,QAAQ,GAAGJ,cAAc,EAA/B;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EANmB,CAOnB;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACtBN,IAAAA,MAAM,CAACG,QAAD,CAAN;AACD,GAFD,CATmB,CAanB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFF,CADF;AAMD,CAlDD;;AAoDA,eAAeF,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNowState, useNowDispatch, getNow } from \"./UsersContext\";\n\nconst Movies = () => {\n  useEffect(() => {}, []);\n  // const [userId, setUserId] = useState(null);\n  const state = useNowState();\n  const dispatch = useNowDispatch();\n\n  console.log(state);\n  // const { loading, data: users, error } = state.users;\n\n  const fetchData = () => {\n    getNow(dispatch);\n  };\n\n  // if (loading) return <div>로딩중입니다.</div>;\n  // if (error) return <div>에러가 발생했습니다.</div>;\n  // if (!users) return <button onClick={fetchData}>불러오기</button>;\n\n  // const [movieList, setMovieList] = useState(null);\n  // const [loading, setLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       setError(null);\n  //       setMovieList(null);\n  //       setLoading(true);\n\n  //       const response = await movies.getNowPlaying();\n  //       setMovieList(response.data.results);\n  //     } catch (e) {\n  //       setError(e);\n  //     }\n  //     setLoading(false);\n  //   };\n  //   fetchUsers(false);\n  // }, []);\n\n  // if (loading) return <div>로딩중..</div>;\n  // if (error) return <div>에러.</div>;\n  // if (!movieList) return null;\n\n  // console.log(movieList);\n\n  return (\n    <div>\n      <h1>홈</h1>\n      <p>이 곳은 홈입니다.</p>\n    </div>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}