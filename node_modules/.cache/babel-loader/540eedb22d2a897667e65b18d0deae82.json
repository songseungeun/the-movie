{"ast":null,"code":"var _jsxFileName = \"/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Movies.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { movies } from \"./api\";\n\nconst Movies = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null\n  });\n\n  const fetchUsers = async () => {\n    dispatch({\n      type: \"LOADING\"\n    });\n\n    try {\n      const response = await movies.getNowPlaying();\n      dispatch({\n        type: \"SUCCESS\",\n        data: response.data.results\n      });\n    } catch (e) {\n      dispatch({\n        type: \"ERROR\",\n        error: e\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const {\n    loading,\n    data: movieList,\n    error\n  } = state;\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }, \"\\uB85C\\uB529\\uC911..\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"\\uC5D0\\uB7EC.\");\n  if (!movieList) return null;\n  console.log(movieList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Now Playing\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"\\uC774 \\uACF3\\uC740 \\uD648\\uC785\\uB2C8\\uB2E4.\"));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/Movies.js"],"names":["React","useEffect","useReducer","movies","Movies","state","dispatch","reducer","loading","data","error","fetchUsers","type","response","getNowPlaying","results","e","movieList","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,OAAvB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,UAAU,CAACK,OAAD,EAAU;AAC5CC,IAAAA,OAAO,EAAE,KADmC;AAE5CC,IAAAA,IAAI,EAAE,IAFsC;AAG5CC,IAAAA,KAAK,EAAE;AAHqC,GAAV,CAApC;;AAMA,QAAMC,UAAU,GAAG,YAAY;AAC7BL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,aAAP,EAAvB;AACAR,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,SAAR;AAAmBH,QAAAA,IAAI,EAAEI,QAAQ,CAACJ,IAAT,CAAcM;AAAvC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVV,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,OAAR;AAAiBF,QAAAA,KAAK,EAAEM;AAAxB,OAAD,CAAR;AACD;AACF,GARD;;AAUAf,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEH,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEQ,SAAjB;AAA4BP,IAAAA;AAA5B,MAAsCL,KAA5C;AAEA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACX,MAAI,CAACO,SAAL,EAAgB,OAAO,IAAP;AAEhBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFF,CADF;AAMD,CAnCD;;AAqCA,eAAeb,MAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { movies } from \"./api\";\n\nconst Movies = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null,\n  });\n\n  const fetchUsers = async () => {\n    dispatch({ type: \"LOADING\" });\n    try {\n      const response = await movies.getNowPlaying();\n      dispatch({ type: \"SUCCESS\", data: response.data.results });\n    } catch (e) {\n      dispatch({ type: \"ERROR\", error: e });\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const { loading, data: movieList, error } = state;\n\n  if (loading) return <div>로딩중..</div>;\n  if (error) return <div>에러.</div>;\n  if (!movieList) return null;\n\n  console.log(movieList);\n\n  return (\n    <div>\n      <h1>Now Playing</h1>\n      <p>이 곳은 홈입니다.</p>\n    </div>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}