{"ast":null,"code":"export default function createAsyncDispatcher(type, promiseFn) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  async function actionHandler(dispatch, ...rest) {\n    dispatch({\n      type\n    });\n\n    try {\n      const data = await promiseFn(...rest);\n      console.log(data);\n      dispatch({\n        type: SUCCESS,\n        data\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        error: e\n      });\n    }\n  }\n\n  return actionHandler;\n}\nexport const initialAsyncState = {\n  loading: false,\n  data: null,\n  error: null\n};\nconst loadingState = {\n  loading: true,\n  data: null,\n  error: null\n};\n\nconst success = data => ({\n  loading: false,\n  data,\n  error: null\n});\n\nconst error = e => ({\n  loading: false,\n  data: null,\n  error: e\n});\n\nexport function createAsyncHandler(type, key) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  function handler(state, action) {\n    switch (action.type) {\n      case type:\n        return { ...state,\n          [key]: loadingState\n        };\n\n      case SUCCESS:\n        return { ...state,\n          [key]: success(action.data)\n        };\n\n      case ERROR:\n        return { ...state,\n          [key]: error(action.error)\n        };\n\n      default:\n        return state;\n    }\n  }\n\n  return handler;\n}","map":{"version":3,"sources":["/Users/songseungeun/Documents/dev/TIL/react/the-movie/src/asyncActionUtils.js"],"names":["createAsyncDispatcher","type","promiseFn","SUCCESS","ERROR","actionHandler","dispatch","rest","data","console","log","e","error","initialAsyncState","loading","loadingState","success","createAsyncHandler","key","handler","state","action"],"mappings":"AAAA,eAAe,SAASA,qBAAT,CAA+BC,IAA/B,EAAqCC,SAArC,EAAgD;AAC7D,QAAMC,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,KAAK,GAAI,GAAEH,IAAK,QAAtB;;AAEA,iBAAeI,aAAf,CAA6BC,QAA7B,EAAuC,GAAGC,IAA1C,EAAgD;AAC9CD,IAAAA,QAAQ,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAAR;;AACA,QAAI;AACF,YAAMO,IAAI,GAAG,MAAMN,SAAS,CAAC,GAAGK,IAAJ,CAA5B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEE,OADC;AAEPK,QAAAA;AAFO,OAAD,CAAR;AAID,KAPD,CAOE,OAAOG,CAAP,EAAU;AACVL,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEG,KADC;AAEPQ,QAAAA,KAAK,EAAED;AAFA,OAAD,CAAR;AAID;AACF;;AAED,SAAON,aAAP;AACD;AAED,OAAO,MAAMQ,iBAAiB,GAAG;AAC/BC,EAAAA,OAAO,EAAE,KADsB;AAE/BN,EAAAA,IAAI,EAAE,IAFyB;AAG/BI,EAAAA,KAAK,EAAE;AAHwB,CAA1B;AAMP,MAAMG,YAAY,GAAG;AACnBD,EAAAA,OAAO,EAAE,IADU;AAEnBN,EAAAA,IAAI,EAAE,IAFa;AAGnBI,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMI,OAAO,GAAIR,IAAD,KAAW;AACzBM,EAAAA,OAAO,EAAE,KADgB;AAEzBN,EAAAA,IAFyB;AAGzBI,EAAAA,KAAK,EAAE;AAHkB,CAAX,CAAhB;;AAMA,MAAMA,KAAK,GAAID,CAAD,KAAQ;AACpBG,EAAAA,OAAO,EAAE,KADW;AAEpBN,EAAAA,IAAI,EAAE,IAFc;AAGpBI,EAAAA,KAAK,EAAED;AAHa,CAAR,CAAd;;AAMA,OAAO,SAASM,kBAAT,CAA4BhB,IAA5B,EAAkCiB,GAAlC,EAAuC;AAC5C,QAAMf,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,KAAK,GAAI,GAAEH,IAAK,QAAtB;;AAEA,WAASkB,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,YAAQA,MAAM,CAACpB,IAAf;AACE,WAAKA,IAAL;AACE,eAAO,EACL,GAAGmB,KADE;AAEL,WAACF,GAAD,GAAOH;AAFF,SAAP;;AAIF,WAAKZ,OAAL;AACE,eAAO,EACL,GAAGiB,KADE;AAEL,WAACF,GAAD,GAAOF,OAAO,CAACK,MAAM,CAACb,IAAR;AAFT,SAAP;;AAIF,WAAKJ,KAAL;AACE,eAAO,EACL,GAAGgB,KADE;AAEL,WAACF,GAAD,GAAON,KAAK,CAACS,MAAM,CAACT,KAAR;AAFP,SAAP;;AAIF;AACE,eAAOQ,KAAP;AAjBJ;AAmBD;;AAED,SAAOD,OAAP;AACD","sourcesContent":["export default function createAsyncDispatcher(type, promiseFn) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  async function actionHandler(dispatch, ...rest) {\n    dispatch({ type });\n    try {\n      const data = await promiseFn(...rest);\n      console.log(data);\n      dispatch({\n        type: SUCCESS,\n        data,\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        error: e,\n      });\n    }\n  }\n\n  return actionHandler;\n}\n\nexport const initialAsyncState = {\n  loading: false,\n  data: null,\n  error: null,\n};\n\nconst loadingState = {\n  loading: true,\n  data: null,\n  error: null,\n};\n\nconst success = (data) => ({\n  loading: false,\n  data,\n  error: null,\n});\n\nconst error = (e) => ({\n  loading: false,\n  data: null,\n  error: e,\n});\n\nexport function createAsyncHandler(type, key) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  function handler(state, action) {\n    switch (action.type) {\n      case type:\n        return {\n          ...state,\n          [key]: loadingState,\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          [key]: success(action.data),\n        };\n      case ERROR:\n        return {\n          ...state,\n          [key]: error(action.error),\n        };\n      default:\n        return state;\n    }\n  }\n\n  return handler;\n}\n"]},"metadata":{},"sourceType":"module"}